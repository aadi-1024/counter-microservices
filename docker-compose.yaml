services:
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672 #ui
    tmpfs:
      - /var/lib/rabbitmq/
      - /var/log/rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: 'elastic'
    ports:
      - 9200:9200
      - 9300:9300
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2048M
    environment:
          ES_JAVA_OPTS: "-Xms750m -Xmx750m"
          discovery.type: "single-node"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    container_name: 'kibana'
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  authdb:
    image: postgres:alpine
    ports:
      - 5432:5432
    tmpfs: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth
  
  gateway:
    build:
      dockerfile: ./gateway/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - auth
    restart: always

  counterdb:
    image: postgres:alpine
    ports:
      - 5433:5433
    tmpfs: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: counter
    command: -p 5433
  
  auth:
    build: 
      dockerfile: ./auth/Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - authdb
    restart: always

  counter:
    build: 
      dockerfile: ./counter/Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - counterdb
    restart: always

  memcached:
    image: memcached:alpine
    ports:
        - "11211:11211"
    